(function() {

    // Prevent newline in contenteditable fields
    $(document).on("keydown", "[contenteditable]", function(e) {
        if (e.which == 13) {
            $(e.target).blur();
            window.getSelection().removeAllRanges();
        }
    });

    $(document).on("click", ".run-huatuo", function(e) {
        EditorFooter.showOutputTab(true);
        EditorFooter.clear();
        EditorFooter.showInfo("Running...");

        var version = Meta.getLanguageVersion();
        
        var url = "@?{(RunR lang, [("snippet", slug)])}" + "&" + $.param({version: version});
       
        var payload = {
            files: Editor.getFiles(),
            stdin: EditorFooter.getStdin(),
            command: Meta.getRunCommand(),
        };

        XHR.jsonPost(url, payload).done(function(data) {
            EditorFooter.show(data);
        }).fail(function(xhr) {
            Alert.danger(xhr.responseJSON.message);
        }).always(function() {
            EditorFooter.hideInfo();
        });
    });

    $(document).on("click", ".run", function(e) {
        EditorFooter.showOutputTab(true);
        EditorFooter.clear();
        EditorFooter.showInfo("Running...");

        var version = Meta.getLanguageVersion();
        var url = "@?{(RunR lang, [("snippet", slug)])}" + "&" + $.param({version: version});
        var payload = {
            files: Editor.getFiles(),
            stdin: EditorFooter.getStdin(),
            command: Meta.getRunCommand(),
        };

        XHR.jsonPost(url, payload).done(function(data) {
            EditorFooter.show(data);
        }).fail(function(xhr) {
            Alert.danger(xhr.responseJSON.message);
        }).always(function() {
            EditorFooter.hideInfo();
        });
    });

    $(document).on("click", ".save", function(e) {
        e.preventDefault();
        save();
    });

    $(document).on("click", ".delete", function(e) {
        e.preventDefault();
        if (confirm("Are you sure you want to delete this snippet?")) {
            deleteSnippet();
        }
    });

    $(document).on("click", ".fork", function(e) {
        var files = Editor.getFiles();
        Fork.setFiles(files);
        Editor.clean();
        Location.set("@{ComposeR lang}");
    });

    function save() {
        var payload = {
            language: #{toJSON $ show lang},
            title: getTitle(),
            public: Meta.isPublic(),
            files: Editor.getFiles(),
        };

        var version = Meta.getLanguageVersion();
        var url = "@{SnippetR slug}" + "?" + $.param({
            version: version,
            command: Meta.getRunCommand(),
            stdin: EditorFooter.getStdin(),
        });

        XHR.jsonPut(url, payload).done(function(data) {
            Editor.clean();
            Location.reload();
        }).fail(function(xhr) {
            Alert.danger("Failed to save snippet");
        });
    }

    function deleteSnippet() {
        XHR.delete("@{SnippetR slug}").done(function(data) {
            Editor.clean();
            Location.set("@{SnippetsR}");
        }).fail(function(xhr) {
            Alert.danger("Failed to delete snippet");
        });
    }

    function getTitle() {
        return $("#snippet-title").text();
    }

    // Require confirmation if user tries to unload page with unsaved changes
    window.onbeforeunload = function() {
        if (!Editor.isClean()) {
            return "You have unsaved changes!";
        }
    };

    // Add share popover listener
    $(document).popover({
        selector: ".share",
        container: "body",
        content: $("#share-content").html(),
        html: true,
    });

    // Hide share popover clicking outside or hitting escape
    $(document).on("click", ".share", function(e) {
        // Prevent dropdown from hiding
        e.preventDefault();
        e.stopPropagation();

        function clickHandler(e) {
            if (!$(e.target).parents(".popover").length) {
                hidePopover();
            }
        };

        function escapeHandler(e) {
            if (e.keyCode == 27) {
                hidePopover();
            }
        };

        function hidePopover() {
            $(".share").popover("hide");
            $(document).off("click", clickHandler);
            $(document).off("keyup", escapeHandler);
        }

        $(document).on("click", clickHandler);
        $(document).on("keyup", escapeHandler);
    });

})();
